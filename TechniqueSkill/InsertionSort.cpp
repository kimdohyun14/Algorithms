#include <iostream>
using namespace std;

/*
	# 삽입 정렬 (Insertion Sort)
	데이터를 앞에서부터 하나씩 확인하며 데이터를 적절한 위치에 삽입하는 알고리즘

	# 시간 복잡도
	O(N^2)

	특정한 데이터를 적절한 위치에 들어가기 전에, 
	그 앞까지의 데이터는 이미 정렬되어 있다고 가정한다.
	선택 정렬에 비해 더 효율적인 알고리즘이며,

	왜? 선택 정렬은 현재 데이터의 상태와 상관없이 무조건 모든 원소를 비교하고
	위치를 바꾸는 반면에, 삽입 정렬은 그렇지 않다.
	이미 정렬되어있는 데이터라면 매우 빠르게 동작하다.
*/

int n = 10;
int arr[10] = { 7,5,9,0,3,1,6,2,4,8 };

int main()
{
	for (int i = 1; i < n; i++)
	{
		for (int j = i; j > 0; j--)
		{
			// 한 칸씩 왼쪽으로 이동
			if (arr[j] < arr[j - 1])
			{
				swap(arr[j], arr[j - 1]);
			}
			// 자기보다 작은 데이터를 만나면 그 위치에서 멈춘다.
			else break;
		}
	}

	for (int i = 0; i < n; i++)
	{
		cout << arr[i] << ' ';
	}

	return 0;
}